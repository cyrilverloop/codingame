<?php

declare(strict_types=1);

namespace CyrilVerloop\Codingame\Tests\{{ configuration.namespace }};

use CyrilVerloop\Codingame\{{ configuration.namespace }}\CGCode;
use CyrilVerloop\Codingame\Tests\CGTestCase;
use PHPUnit\Framework\Attributes as PA;

/**
 * Tests for the "{{ configuration.name }}" puzzle.
 */
#[
    PA\CoversClass(CGCode::class),
    PA\Group('cgpt_{{ configuration.group }}'),
    PA\TestDox('{{ configuration.name }}'),
    PA\Medium
]
final class CGTest extends CGTestCase
{
    public function setUp(): void
    {
        $this->cgCode = new CGCode();
    }
{% for test in configuration.testConfigurations %}

    /**
     * Test that the code can be executed for "{{ test.name }}".
     */
    #[
        PA\Group('cgpt_{{ configuration.group }}_{{ test.group }}'),
        PA\TestDox('{{ test.name }}')
    ]
    public function test{{ test.method }}(): void
    {
        $this->expectExecuteOutputAnswer(
            __DIR__ . '/input/{{ test.file }}',
            file_get_contents(__DIR__ . '/output/{{ test.file }}')
        );
    }
{% endfor %}
}
